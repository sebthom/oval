# {0} = the validation context
# {1} = the value that has been checked
# {2..n} = custom variables depending on the check corresponding class

net.sf.oval.constraints.Assert.violated={0} erfüllt Bedingung nicht: {2}
net.sf.oval.constraints.AssertFalse.violated={0} muss unwahr sein
net.sf.oval.constraints.AssertTrue.violated={0} muss wahr sein
net.sf.oval.constraints.Future.violated={0} muss in der Zukunft liegen
net.sf.oval.constraints.InstanceOf.violated={0} muss eine Instanz von {2} sein
net.sf.oval.constraints.Length.violated={0} hat keine Länge von {2} bis {3} Zeichen
net.sf.oval.constraints.NotEmpty.violated={0} darf nicht leer sein
net.sf.oval.constraints.NotNegative.violated={0} darf nicht negativ sein
net.sf.oval.constraints.NotNull.violated={0} darf nicht Null sein
net.sf.oval.constraints.NotSelfRef.violated={0} darf keine Selbstreferenz sein
net.sf.oval.constraints.Past.violated={0} muss in der Vergangenheit liegen
net.sf.oval.constraints.Range.violated={0} ist nicht im Bereich {2} bis {3}
net.sf.oval.constraints.RegEx.violated={0} entspricht nicht dem Muster {2}
net.sf.oval.constraints.Size.violated={0} besitzt nicht {2} bis {3} Elemente
net.sf.oval.constraints.ValidateWithMethod.violated={0} wurde durch die Methode {2}({3}) als ungültig bewertet

net.sf.oval.guard.Pre.violated={0} erfüllt Vorbedingung nicht: {2}
net.sf.oval.guard.Post.violated={0} erfüllt Nachbedingung nicht: {2}