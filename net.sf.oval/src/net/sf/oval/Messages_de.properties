# {context} = the validation context
# {1} = the value that has been checked
# {2..n} = custom variables depending on the check corresponding class

net.sf.oval.constraints.Assert.violated={context} erfüllt Bedingung nicht: {expression}
net.sf.oval.constraints.AssertFalse.violated={context} muss unwahr sein
net.sf.oval.constraints.AssertTrue.violated={context} muss wahr sein
net.sf.oval.constraints.Contains.violated={context} muss die Zeichenkette '{substring}' enthalten
net.sf.oval.constraints.Future.violated={context} muss in der Zukunft liegen
net.sf.oval.constraints.InstanceOf.violated={context} muss eine Instanz von {type} sein
net.sf.oval.constraints.Length.violated={context} hat keine Länge von {min} bis {max} Zeichen
net.sf.oval.constraints.Max.violated={context} darf nicht grösser als {max} sein
net.sf.oval.constraints.MaxLength.violated={context} darf nicht länger als {max} Zeichen sein
net.sf.oval.constraints.MaxSize.violated={context} darf nicht mehr als {max} Elemente besitzen
net.sf.oval.constraints.Min.violated={context} darf nicht kleiner als {min} sein
net.sf.oval.constraints.MinLength.violated={context} darf nicht kürzer als {min} Zeichen sein
net.sf.oval.constraints.MinSize.violated={context} darf nicht weniger als {min} Elemente besitzen
net.sf.oval.constraints.NoSelfReference.violated={context} darf keine Selbstreferenz sein
net.sf.oval.constraints.NotEmpty.violated={context} darf nicht leer sein
net.sf.oval.constraints.NotNegative.violated={context} darf nicht negativ sein
net.sf.oval.constraints.NotNull.violated={context} darf nicht Null sein
net.sf.oval.constraints.Past.violated={context} muss in der Vergangenheit liegen
net.sf.oval.constraints.Range.violated={context} ist nicht im Bereich {min} bis {max}
net.sf.oval.constraints.RegEx.violated={context} entspricht nicht dem Muster {pattern}
net.sf.oval.constraints.Size.violated={context} besitzt nicht {min} bis {max} Elemente
net.sf.oval.constraints.ValidateWithMethod.violated={context} wurde durch die Methode {methodName}({parameterType}) als ungültig bewertet

net.sf.oval.guard.Pre.violated={context} erfüllt Vorbedingung nicht: {expression}
net.sf.oval.guard.Post.violated={context} erfüllt Nachbedingung nicht: {expression}