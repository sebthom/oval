# {context} = the validation context
# {1} = the value that has been checked
# {2..n} = custom variables depending on the check corresponding class

net.sf.oval.constraints.Assert.violated={context} does not satisfy condition: {expression}
net.sf.oval.constraints.AssertFalse.violated={context} n'est pas faux
net.sf.oval.constraints.AssertTrue.violated={context} n'est pas vrai
net.sf.oval.constraints.Contains.violated={context} must contain the substring '{substring}'
net.sf.oval.constraints.Future.violated={context} must be in the future
net.sf.oval.constraints.InstanceOf.violated={context} must be an instance of {type}
net.sf.oval.constraints.Length.violated={context} n'est pas compris entre {min} et {max} caract\u00e8res de longueur
net.sf.oval.constraints.Max.violated={context} cannot be greater than {max}
net.sf.oval.constraints.MaxLength.violated={context} cannot be longer than {max} characters
net.sf.oval.constraints.MaxSize.violated={context} cannot have more than {max} elements
net.sf.oval.constraints.Min.violated={context} cannot be smaller than {min}
net.sf.oval.constraints.MinLength.violated={context} cannot be smaller than {min} characters
net.sf.oval.constraints.MinSize.violated={context} cannot have less than {min} elements
net.sf.oval.constraints.NoSelfReference.violated={context} propre référence illégale
net.sf.oval.constraints.NotEmpty.violated={context} est vide
net.sf.oval.constraints.NotNegative.violated={context} est n\u00e9gatif
net.sf.oval.constraints.NotNull.violated={context} est null
net.sf.oval.constraints.Past.violated={context} must be in the past
net.sf.oval.constraints.Range.violated={context} n'est pas compris {min} à {max}
net.sf.oval.constraints.RegEx.violated={context} ne reconnait pas le motif {pattern}
net.sf.oval.constraints.Size.violated={context} n'a pas entre {min} et {max} elements
net.sf.oval.constraints.ValidateWithMethod.violated={context} est indiqu\u00e9 comme \u00e9tant invalide par la m\u00e9thode {methodName}({parameterType})

net.sf.oval.guard.Pre.violated={context} does not satisfy pre condition: {substring}
net.sf.oval.guard.Post.violated={context} does not satisfy post condition: {substring}