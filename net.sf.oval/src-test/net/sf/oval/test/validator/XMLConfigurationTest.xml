<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE oval PUBLIC 
   "-//OVal/OVal Configuration DTD 0.9//EN"
   "http://oval.sourceforge.net/oval-configuration-0.9.dtd">
<oval>
	<!-- define a constraint set -->
	<constraintSet id="user.userid">
		<notNull message="{context} is null" />
		<matchPattern message="{context} does not match the pattern {pattern}">
			<pattern pattern="^[a-z0-9]{8}$" flags="0" />
		</matchPattern>
	</constraintSet>

	<!-- define checks for the net.sf.oval.test.validator.XMLConfigurationTest$User class -->
	<!-- overwrite=false means already defined checks for this class will not be removed -->
	<class type="net.sf.oval.test.validator.XMLConfigurationTest$User" overwrite="false"
		applyFieldConstraintsToSetter="true">
		<field name="firstName">
			<length min="0" max="3"	message="{context} is not between {min} and {max} characters long" />
		</field>

		<field name="lastName">
			<length min="0" max="5"	message="{context} is not between {min} and {max} characters long" />
		</field>

		<!-- overwrite=true means previously defined checks for this field will be overwritten by the checks defined here -->
		<field name="userId" overwrite="true">
			<!-- use the checks defined for the constaint set "user.userid" -->
			<assertConstraintSet id="user.userid" />
		</field>

		<!-- define a getter return value check -->
		<method name="getManagerId" isInvariant="true">
			<!-- returnValue - use the checks defined for the constaint set "user.userid" -->
			<returnValue>
				<assertConstraintSet id="user.userid" />
			</returnValue>
		</method>
	</class>
</oval>