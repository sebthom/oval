<?xml version="1.0" encoding="UTF-8"?>
<project>

	<description>
    	OVal is a generic based object validation framework for Java 5
    </description>

	<tstamp>
		<format property="TODAY" pattern="yyyy-MM-dd" />
		<format property="NOW" pattern="yyyyMMddHHmm" />
	</tstamp>

	<!-- ================================ -->
	<!-- Global properties                -->
	<!-- ================================ -->
	<property name="version" value="0.5" />
	<property name="buildversion" value="${version}.${NOW}" />
	<property name="jar.basename" value="net.sf.oval" />
	<property name="dist.basename" value="net.sf.oval" />
		
	<!-- ================================ -->
	<!-- Project directories              -->
	<!-- ================================ -->
	<property name="src" value="${basedir}/src" />
	<property name="doc" value="${basedir}/doc" />
	<property name="res" value="${basedir}/resources" />

	<property name="dist" value="${basedir}/dist" />

	<property name="build" value="${java.io.tmpdir}/${dist.basename}_build" />
	<property name="bin" value="${build}/bin" />

	<!-- ================================ -->
	<!-- Class path                       -->
	<!-- ================================ -->
	<path id="classpath">
		<!-- includes all jar files in lib -->
		<fileset dir="${res}">
			<include name="**/*.jar" />
		</fileset>

		<fileset dir="${ant.home}/..">
			<!-- includes all aspectj jar files from the eclise plugin dir -->
			<include name="*aspectj*/**/*.jar" />
			<include name="*ajdt*/**/*.jar" />
			
			<!-- includes all junit jar files from the eclise plugin dir -->
			<include name="*org.junit_*/**/*.jar" />
			
			<!-- required for AspectJ referenced class org/eclipse/core/runtime/OperationCanceledException -->
			<include name="org.eclipse.equinox.common_*.jar"/>
			
			<include name="org.eclipse.osgi_*.jar"/>
		</fileset>
		
	</path>

	<!-- ================================ -->
	<!-- Add. Ant Task definitions        -->
	<!-- ================================ -->
	<taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" classpathref="classpath" />

	<!-- ================================ -->
	<!-- Target: display properties       -->
	<!-- ================================ -->
	<target name="display_properties">

		<echoproperties />

	</target>

	<!-- ================================ -->
	<!-- Target: clean                    -->
	<!-- ================================ -->
	<target name="clean">
		<delete dir="${build}" />
		<mkdir dir="${build}" />
	</target>

	<!-- ================================ -->
	<!-- Target: doc                      -->
	<!-- ================================ -->
	<target name="create_docs" depends="display_properties,clean">

		<mkdir dir="${build}/doc" />

		<!--http://ant.apache.org/manual/CoreTasks/style.html-->
		<xslt basedir="${doc}" destdir="${build}/doc" style="${res}/docbook/oval.xsl" classpathref="classpath" processor="trax">
			
			<mapper type="glob" from="*.xml" to="*.html" />

			<outputproperty name="method" value="xml" />
			<outputproperty name="standalone" value="yes" />
			<outputproperty name="encoding" value="iso8859_1" />
			<outputproperty name="indent" value="yes" />

		</xslt>

		<copy todir="${build}/doc/">
			<fileset dir="${doc}" includes="images/*,css/*" />
		</copy>

		<mkdir dir="${build}/doc/api" />

		<javadoc doctitle="OVal - object validation framework" windowtitle="OVal" sourcepath="${src}" destdir="${build}/doc/api" packagenames="*" access="protected" author="true" classpathref="classpath" serialwarn="true" splitindex="true" use="true" version="true" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false">

			<link href="http://java.sun.com/j2se/1.5/docs/api/" />

		</javadoc>

	</target>

	<!-- ================================ -->
	<!-- Target: compile                  -->
	<!-- ================================ -->
	<target name="compile" depends="display_properties,clean">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${bin}"  />

		<!-- run AspectJ compiler to compile the source files -->
		<iajc srcdir="${src}" destdir="${bin}" debug="on" classpathref="classpath" source="1.5" />
		
		<copy todir="${bin}/">
			<fileset
				dir="${src}"
				includes="**/*"
				excludes="**/*.java, **/*.aj"
			/>
		</copy>
	</target>

	<target name="jar" depends="compile">

		<jar jarfile="${build}/${jar.basename}_${version}.jar" basedir="${bin}" manifest="${basedir}/META-INF/MANIFEST.MF">

			<manifest>
				<!-- see http://java.sun.com/docs/books/tutorial/jar/manifest/packageman.html -->
				<!-- see http://java.sun.com/j2se/1.5.0/docs/guide/extensions/versioning.html -->
				<section name="net/sf/oval">
					<attribute name="Package" value="net.sf.oval" />
					<attribute name="Specification-Title" value="OVal - Object Validation Framework" />
					<attribute name="Specification-Version" value="${version}" />
					<attribute name="Specification-Vendor-Id" value="net.sf.oval" />
					<attribute name="Specification-URL" value="http://oval.sf.net" />

					<attribute name="Implementation-Title" value="net.sf.oval" />
					<attribute name="Implementation-Version" value="${buildversion}" />
					<attribute name="Implementation-Vendor-Id" value="net.sf.oval" />
					<attribute name="Implementation-URL" value="http://oval.sf.net" />
				</section>
			</manifest>

			<fileset
				dir="${doc}"
				includes="*.txt,*.html,*.url"
			/>
		</jar>

	</target>

	<target name="dist" depends="jar,create_docs">
		
		<description>Creates all distribution files</description>
		
		<copy todir="${build}/">
			<fileset
				dir="${doc}"
				includes="*.txt,*.html,*.url"
			/>
		</copy>
		
		<replace file="${build}/README.txt" token="$VERSION$" value="${version}"/>
		
		<zip 
			basedir="${src}"
			destfile="${build}/${jar.basename}_${version}-src.zip"
		/>

		<delete failonerror="false">
			<fileset dir="${dist}" includes="${dist.basename}_${buildversion}*"/>
		</delete>
		
		<tar destfile="${dist}/${dist.basename}_${buildversion}.tar.gz" compression="gzip" longfile="gnu">
			<tarfileset dir="${build}" excludes="bin/**"/>
		</tar>
		
		<zip 
			basedir="${build}"
			destfile="${dist}/${dist.basename}_${buildversion}.zip"
			excludes="bin/**"
		/>
		
		<delete dir="${build}" />
		
	</target>
</project>