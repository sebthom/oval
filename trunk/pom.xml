<?xml version="1.0"?>
	<!--
	@author Holger Riegel
	@author Sebastian Thomschke 
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.sf.oval</groupId>
	<artifactId>oval</artifactId>
	<version>1.33-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>OVal</name>
	<url>http://oval.sf.net</url>
	<description><![CDATA[OVal is a pragmatic and extensible validation framework for any kind of Java objects (not only JavaBeans).

Constraints can be declared with annotations (@NotNull, @MaxLength), POJOs or XML.

Custom constraints can be expressed as custom Java classes or by using scripting languages such as JavaScript, Groovy, BeanShell, OGNL or MVEL.

Besides field/property validation OVal implements Programming by Contract features by utilizing AspectJ based aspects. This for example allows runtime validation of method arguments.]]></description>
	<organization>
		<name>The OVal Development Team</name>
		<url>http://oval.sf.net/</url>
	</organization>
	<licenses>
		<license>
			<name>Eclipse Public License - v 1.0</name>
			<distribution>repo</distribution>
			<!-- <url>http://www.eclipse.org/legal/epl-v10.html</url> -->
			<url>http://oval.sf.net/license/epl-v10.txt</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>sebthom</id>
			<name>Sebastian Thomschke</name>
			<email>sebthom at users.sourceforge.net</email>
			<roles>
				<role>lead</role>
				<role>developer</role>
			</roles>
			<timezone>-1</timezone>
		</developer>
		<developer>
			<id>hriegel</id>
			<name>Holger Riegel</name>
			<email>hriegel at users.sourceforge.net</email>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>-1</timezone>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>Mirko Humbert</name>
			<url>http://www.mirkohumbert.ch/</url>
			<roles>
				<role>Designer of the OVal logo</role>
			</roles>
		</contributor>
	</contributors>
	<scm>
		<url>http://oval.svn.sourceforge.net/viewvc/oval/trunk</url>
		<connection>scm:svn:http://oval.svn.sourceforge.net/svnroot/oval/trunk</connection>
		<developerConnection>scm:svn:https://oval.svn.sourceforge.net/svnroot/oval/trunk</developerConnection>
	</scm>
	<mailingLists>
		<mailingList>
			<name>Help</name>
			<archive>http://sourceforge.net/forum/forum.php?forum_id=488110</archive>
		</mailingList>
		<mailingList>
			<name>Open Discussion</name>
			<archive>http://sourceforge.net/forum/forum.php?forum_id=488109</archive>
		</mailingList>
	</mailingLists>
	<repositories>
		<repository>
			<id>net.sf.oval-repo</id>
			<name>OVal Repository for Maven</name>
			<url>http://oval.sourceforge.net/mvn-repo/release</url>
			<layout>default</layout>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>Codehaus repository</id>
			<url>http://repository.codehaus.org/</url>
		</pluginRepository>
	</pluginRepositories>
	<distributionManagement>
		<downloadUrl>http://sourceforge.net/project/showfiles.php?group_id=145963</downloadUrl>
		<repository>
			<id>oval-release</id>
			<url>scp://shell.sourceforge.net:/home/groups/o/ov/oval/htdocs/mvn-repo/release</url>
		</repository>
		<snapshotRepository>
			<id>oval-snapshot</id>
			<url>scp://shell.sourceforge.net:/home/groups/o/ov/oval/htdocs/mvn-repo/snapshot</url>
		</snapshotRepository>
		<site>
			<id>oval-site</id>
			<url>scp://shell.sourceforge.net:/home/group/o/ov/oval/htdocs/site</url>
		</site>
	</distributionManagement>
	<inceptionYear>2005</inceptionYear>
	<issueManagement>
		<system>sourceforge</system>
		<url>http://sourceforge.net/tracker/?group_id=145963</url>
	</issueManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<version.java>1.5</version.java>
		<version.aspectj>1.6.2</version.aspectj>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<optional>true</optional>
			<exclusions>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${version.aspectj}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.5.6</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.3.1</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.beanshell</groupId>
			<artifactId>bsh</artifactId>
			<version>2.0b4</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>ognl</groupId>
			<artifactId>ognl</artifactId>
			<version>2.7.3</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jruby</groupId>
			<artifactId>jruby</artifactId>
			<version>1.2.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>rhino</groupId>
			<artifactId>js</artifactId>
			<version>1.7R1</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.javolution</groupId>
			<artifactId>javolution</artifactId>
			<version>5.2.6</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
			<version>2.5.6.SEC01</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<version>1.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>1.6.2</version>
			<optional>true</optional>
			<exclusions>
				<exclusion>
					<groupId>org.apache.ant</groupId>
					<artifactId>ant</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.ant</groupId>
					<artifactId>ant-launcher</artifactId>
				</exclusion>
				<exclusion>
					<groupId>jline</groupId>
					<artifactId>jline</artifactId>
				</exclusion>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<!-- TODO: bring this version to the central maven2 repository:-->
			<groupId>commons-jexl</groupId>
			<artifactId>commons-jexl</artifactId>
			<version>20070823</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.mvel</groupId>
			<artifactId>mvel2</artifactId>
			<version>2.0.8</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.paranamer</groupId>
			<artifactId>paranamer</artifactId>
			<version>1.3</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<!-- TODO: bring this version to the central maven2 repository:-->
			<groupId>trove</groupId>
			<artifactId>trove</artifactId>
			<version>2.0.3</version>
			<optional>true</optional>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>clirr-maven-plugin</artifactId>
				<version>2.2.2</version>
				<configuration>
					<minSeverity>info</minSeverity>
					<!--
						<comparisonArtifacts> <comparisonArtifact> <groupId>net.sf.oval</groupId> <artifactId>oval</artifactId>
						<version>1.10</version> </comparisonArtifact> </comparisonArtifacts>
					-->

				</configuration>
			</plugin>


			<!-- ********************************************************************* -->
			<!-- phase: validate -->
			<!-- ********************************************************************* -->
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-no-snapshots</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireReleaseDeps>
									<message>No Snapshots Allowed!</message>
								</requireReleaseDeps>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>

					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>2.0.9</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${version.java}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- ********************************************************************* -->
			<!-- phase: generate-sources -->
			<!-- ********************************************************************* -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<configuration>
							<tasks>
								<copy todir="${project.build.directory}">
									<fileset dir="${basedir}" includes="README.txt" />
								</copy>
								<replace file="${project.build.directory}/README.txt" token="$VERSION$" value="${pom.version}" />
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- ********************************************************************* -->
			<!-- phase: generate-resources -->
			<!-- ********************************************************************* -->
			<plugin>
				<!--
					better docbook support see http://docs.codehaus.org/display/MAVENUSER/Docbkx+Maven+Plugin manual: mvn
					docbkx:generate-html
				-->
				<groupId>com.agilejava.docbkx</groupId>
				<artifactId>docbkx-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>generate-html</goal>
						</goals>
						<!--
							needs to be in generate-resources and not pre-site since we also want to include the documentation in the
							distributions and not just the site
						-->
						<phase>generate-resources</phase>
					</execution>
				</executions>
				<configuration>
					<!--
						see http://docbook.sourceforge.net/release/xsl/snapshot/doc/html/ and
						http://www.agilejava.com/docbkx/docbkx-maven-plugin/generate-html-mojo.html
					-->
					<sourceDirectory>${basedir}/src/site/docbook</sourceDirectory>
					<targetDirectory>${project.build.directory}/site</targetDirectory>
					<highlightDefaultLanguage>java</highlightDefaultLanguage>
					<highlightSource>1</highlightSource>
					<graphicDefaultExtension>png</graphicDefaultExtension>
					<useExtensions>1</useExtensions>
					<tocSectionDepth>2</tocSectionDepth>

					<!-- Enable auto numbering of section labels -->
					<sectionAutolabel>1</sectionAutolabel>

					<!-- Enable CSS support -->
					<cssDecoration>1</cssDecoration>
					<htmlStylesheet>css/userguide.css</htmlStylesheet>
					<tableBordersWithCss>1</tableBordersWithCss>

					<!--
						Turn off rules below/above header/footer - we'll use CSS borders
					-->
					<headerRule>0</headerRule>
					<footerRule>0</footerRule>

					<!-- Turn off image scaling when generating HTML output -->
					<makeGraphicViewport>1</makeGraphicViewport>
					<ignoreImageScaling>1</ignoreImageScaling>

					<!--
						Make external links stay within window (don't let them take over
						entire frame)
					-->
					<ulinkTarget>'_self'</ulinkTarget>

					<!-- Spend extra CPU time to try and produce valid and pretty HTML -->
					<htmlCleanup>1</htmlCleanup>
					<makeValidHtml>1</makeValidHtml>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.docbook</groupId>
						<artifactId>docbook-xml</artifactId>
						<version>4.4</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native2ascii-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>native2ascii</goal>
						</goals>
						<phase>generate-resources</phase>
					</execution>
				</executions>
				<configuration>
					<dest>${project.build.directory}/classes</dest>
					<src>${basedir}/src/main/resources</src>
					<includes>**/*.properties</includes>
					<encoding>UTF8</encoding>
				</configuration>
			</plugin>


			<!-- ********************************************************************* -->
			<!-- phase: compile -->
			<!-- ********************************************************************* -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${version.java}</source>
					<target>${version.java}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<complianceLevel>${version.java}</complianceLevel>
					<source>${version.java}</source>
					<testAspectDirectory>${basedir}/src/test/java</testAspectDirectory>
					<aspectDirectory>${basedir}/src/main/java</aspectDirectory>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjrt</artifactId>
						<version>${version.aspectj}</version>
					</dependency>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${version.aspectj}</version>
					</dependency>
				</dependencies>
			</plugin>


			<!-- ********************************************************************* -->
			<!-- phase: package -->
			<!-- ********************************************************************* -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<!-- <useDefaultManifestFile>true</useDefaultManifestFile>-->
					<archive>
						<manifestFile>${basedir}/src/main/java/META-INF/MANIFEST.MF</manifestFile>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifestEntries>
							<Bundle-Version>${pom.version}</Bundle-Version>
							<Specification-Title>${pom.name}</Specification-Title>
							<Specification-Version>${pom.version}</Specification-Version>
							<Specification-Vendor>${pom.organization.name}</Specification-Vendor>
							<Specification-URL>${pom.url}</Specification-URL>
							<Implementation-Title>${pom.name}</Implementation-Title>
							<Implementation-Version>${pom.version}</Implementation-Version>
							<Implementation-Vendor-Id>${pom.groupId}</Implementation-Vendor-Id>
							<Implementation-Vendor>${pom.organization.name}</Implementation-Vendor>
							<Implementation-URL>${pom.url}</Implementation-URL>
						</manifestEntries>
					</archive>
					<excludes>
						<exclude>builddef.lst</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!--
					we are generating the site in the package phase because we want to include it in the distribution
				-->
				<artifactId>maven-site-plugin</artifactId>
				<dependencies>
					<!--
						docbook support, unfortunately very limited <dependency> <groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-docbook-simple</artifactId> <version>1.0-alpha-10-SNAPSHOT</version> </dependency>
					-->

					<!--
						TWIKI support http://twiki.org/cgi-bin/view/TWiki/TextFormattingRules <dependency>
						<groupId>org.apache.maven.doxia</groupId> <artifactId>doxia-module-twiki</artifactId>
						<version>1.0-alpha-10-SNAPSHOT</version> </dependency>
					-->
				</dependencies>
				<configuration>
					<inputEncoding>utf-8</inputEncoding>
					<outputEncoding>utf-8</outputEncoding>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>${basedir}/src/main/assembly/sources.xml</descriptor>
						<descriptor>${basedir}/src/main/assembly/archive-with-dependencies.xml</descriptor>
						<descriptor>${basedir}/src/main/assembly/archive-without-dependencies.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>attached</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>


			<!-- ********************************************************************* -->
			<!-- phase: manual execution -->
			<!-- ********************************************************************* -->
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<classpathContainers>
						<classpathContainer>
							org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-${version.java} 
						</classpathContainer>
					</classpathContainers>
					<additionalProjectnatures>
						<projectnature>org.eclipse.ajdt.ui.ajnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.eclipse.ajdt.core.ajbuilder</buildcommand>
					</additionalBuildcommands>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<!-- Generate Javadoc for the project. -->
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<stylesheetfile>${basedir}/src/site/javadoc/oval-javadoc.css</stylesheetfile>
					<stylesheet>maven</stylesheet>
					<linksource>true</linksource>
					<links>
						<link>http://java.sun.com/j2se/${version.java}.0/docs/api/</link>
					</links>
					<source>${version.java}</source>
					<destDir>api</destDir>
				</configuration>
				<reportSets>
					<reportSet>
						<id>html</id>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<!-- Creates an html-based, cross referenced version of Java source code for a project. -->
				<artifactId>maven-jxr-plugin</artifactId>
				<configuration>
					<linkJavadoc>true</linkJavadoc>
					<javadocDir>api</javadocDir>
				</configuration>
			</plugin>

			<plugin>
				<!-- Generate a report based on the results of unit tests. -->
				<artifactId>maven-surefire-report-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<report>report-only</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<!-- TODO, @todo list report -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<!-- JUnit Code Coverage report -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
        		<configuration>
          			<instrumentation>
            			<excludes>
              				<exclude>net/sf/oval/test/**/*.class</exclude>
            			</excludes>
          			</instrumentation>
        		</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<!-- This plugin produces a nicely formatted metrics report based on your project -->
			    <artifactId>maven-pmd-plugin</artifactId>
			    <configuration>
          			<linkXref>true</linkXref>
          			<sourceEncoding>utf-8</sourceEncoding>
          			<minimumTokens>100</minimumTokens>
          			<targetJdk>${version.java}</targetJdk>
        		</configuration>
			</plugin>
			
			<plugin>
				<!-- FindBugs looks for bugs in Java programs -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<configuration>
					<excludeFilterFile>${basedir}/src/misc/findbugs-exclude.xml</excludeFilterFile>
					<xmlOutput>true</xmlOutput>
					<effort>Max</effort>
				</configuration>
			</plugin>

      		<plugin>
        		<artifactId>maven-checkstyle-plugin</artifactId>
        		<configuration>
        	 		<configLocation>${basedir}/src/misc/checkstyle-config.xml</configLocation>
        			<enableRSS>false</enableRSS>
        			<failsOnError>false</failsOnError>
        			<linkXref>true</linkXref>
        		</configuration>
	      	</plugin>

      		<plugin>
      			<!-- The basic purpose of "Maven Dashboard Report Plugin" is to centralize and share all quality informations generated by other Maven report plugins as -->
        		<groupId>org.codehaus.mojo</groupId>
        		<artifactId>dashboard-maven-plugin</artifactId>
      		</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>clirr-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>

</project>
