<!-- OVal DTD

<!DOCTYPE oval PUBLIC 
   "-//OVal/OVal Configuration DTD 1.3//EN"
   "http://oval.sourceforge.net/oval-configuration-1.3.dtd">

or

<!DOCTYPE oval SYSTEM 
   "file:///c:/mypath/oval-configuration-1.3.dtd">

  http://en.wikipedia.org/wiki/Document_Type_Definition
-->

<!-- The root configuration element -->
<!ELEMENT oval ( (constraintSet|class)* ) >

<!ELEMENT string (#PCDATA) >

<!-- Defines a constraint set -->
<!ELEMENT constraintSet ( (assert|assertConstraintSet|assertFalse|assertFieldConstraints|assertTrue|assertURL|assertValid|checkWith|equalToField|future|hasSubstring|instanceOf|instanceOfAny|length|matchPattern|max|maxLength|maxSize|min|minLength|minSize|noSelfReference|notEmpty|notEqual|notEqualToField|notNegative|notNull|past|range|size|validateWithMethod)* )>
<!ATTLIST constraintSet id NMTOKEN #REQUIRED >
<!ATTLIST constraintSet overwrite (true|false) #IMPLIED >

<!-- Constraints configuration for a specific class -->
<!ELEMENT class ( object?,(field|constructor|method)* ) >
<!ATTLIST class applyFieldConstraintsToConstructors (true|false) #IMPLIED >
<!ATTLIST class applyFieldConstraintsToSetters (true|false) #IMPLIED >
<!ATTLIST class assertParametersNotNull (true|false) #IMPLIED >
<!ATTLIST class checkInvariants (true|false) #IMPLIED >
<!ATTLIST class overwrite (true|false) #IMPLIED >
<!ATTLIST class type CDATA #REQUIRED >

<!ELEMENT profiles (string*) >

<!-- Constraints configuration for constraints on object level --> 
<!ELEMENT object ((assert|checkWith|validateWithMethod)*) >
<!ATTLIST object overwrite (true|false) #IMPLIED >

<!-- Constraints configuration for a field -->
<!ELEMENT field ( (assert|assertConstraintSet|assertFalse|assertFieldConstraints|assertTrue|assertURL|assertValid|checkWith|equalToField|future|hasSubstring|instanceOf|instanceOfAny|length|matchPattern|max|maxLength|maxSize|min|minLength|minSize|noSelfReference|notEmpty|notEqual|notEqualToField|notNegative|notNull|past|range|size|validateWithMethod)* )>
<!ATTLIST field name NMTOKEN #REQUIRED >
<!ATTLIST field overwrite (true|false) #IMPLIED >

<!--Constraints configuration for a constructor.
To identify the correct constructor you are required to list all parameters, including parameters you are not intending to specify constraints for.-->
<!ELEMENT constructor (parameter*) >
<!ATTLIST constructor postCheckInvariants (true|false) #IMPLIED >
<!ATTLIST constructor overwrite (true|false) #IMPLIED >

<!-- Constraints configuration for a method.
To identify the correct method you are required to list all parameters, including parameters you are not intending to specify constraints for. -->
<!ELEMENT method (parameter*,preExcecution?,returnValue?,postExcecution?) >
<!ATTLIST method name NMTOKEN #REQUIRED >
<!ATTLIST method isInvariant (true|false) #IMPLIED >
<!ATTLIST method overwrite (true|false) #IMPLIED >

<!-- Constraints configuration for a constructor/method parameter -->
<!ELEMENT parameter ( (
    assert|assertConstraintSet|assertFalse|assertFieldConstraints|assertTrue|assertURL|assertValid|checkWith|equalToField|future|hasSubstring|instanceOf|instanceOfAny|length|matchPattern|max|maxLength|maxSize|min|minLength|minSize|noSelfReference|notEmpty|notEqual|notEqualToField|notNegative|notNull|past|range|size|validateWithMethod|
    nullable
)* )>
<!ATTLIST parameter overwrite (true|false) #IMPLIED >
<!ATTLIST parameter type CDATA #REQUIRED >

<!-- Constraints configuration for the return value of a method. -->
<!ELEMENT returnValue ( (assert|assertConstraintSet|assertFalse|assertFieldConstraints|assertTrue|assertURL|assertValid|checkWith|equalToField|future|hasSubstring|instanceOf|instanceOfAny|length|matchPattern|max|maxLength|maxSize|min|minLength|minSize|noSelfReference|notEmpty|notEqual|notEqualToField|notNegative|notNull|past|range|size|validateWithMethod)* )>
<!ATTLIST returnValue overwrite (true|false) #IMPLIED >

<!ELEMENT preExcecution (pre*)>
<!ATTLIST preExcecution checkInvariants (true|false) #IMPLIED >
<!ATTLIST preExcecution overwrite (true|false) #IMPLIED >

<!-- method pre condition - special programming by contract constraints -->
<!ELEMENT pre (profiles?) >
<!ATTLIST pre expr CDATA #REQUIRED >
<!ATTLIST pre errorCode CDATA #IMPLIED >
<!ATTLIST pre lang (bsh|beanshell|js|javascript|groovy|ognl) #REQUIRED >
<!ATTLIST pre message CDATA #IMPLIED >
<!ATTLIST pre severity NMTOKEN #IMPLIED >

<!ELEMENT postExcecution (post*) >
<!ATTLIST postExcecution checkInvariants (true|false) #IMPLIED >
<!ATTLIST postExcecution overwrite (true|false) #IMPLIED >

<!-- method post condition - special programming by contract constraints -->
<!ELEMENT post (profiles?) >
<!ATTLIST post expr CDATA #REQUIRED >
<!ATTLIST post errorCode CDATA #IMPLIED >
<!ATTLIST post lang (bsh|beanshell|js|javascript|groovy|ognl) #REQUIRED >
<!ATTLIST post message CDATA #IMPLIED >
<!ATTLIST post severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.Assert
The node body contains the script expression as CDATA
-->
<!ELEMENT assert (expr,profiles?) >
<!ATTLIST assert errorCode CDATA #IMPLIED >
<!ATTLIST assert lang (bsh|beanshell|js|javascript|groovy|ognl) #REQUIRED >
<!ATTLIST assert message CDATA #IMPLIED >
<!ATTLIST assert severity NMTOKEN #IMPLIED >
<!ELEMENT expr (#PCDATA)>

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.AssertConstraintSet -->
<!ELEMENT assertConstraintSet (profiles?) >
<!ATTLIST assertConstraintSet id NMTOKEN #REQUIRED >
<!ATTLIST assertConstraintSet source NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.AssertFalse -->
<!ELEMENT assertFalse (profiles?) >
<!ATTLIST assertFalse errorCode CDATA #IMPLIED >
<!ATTLIST assertFalse message CDATA #IMPLIED >
<!ATTLIST assertFalse severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.AssertFieldConstraints -->
<!ELEMENT assertFieldConstraints (profiles?) >
<!ATTLIST assertFieldConstraints fieldName NMTOKEN #REQUIRED >
<!ATTLIST assertFieldConstraints declaringClass NMTOKEN #REQUIRED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.AssertTrue -->
<!ELEMENT assertTrue (profiles?) >
<!ATTLIST assertTrue errorCode CDATA #IMPLIED >
<!ATTLIST assertTrue message CDATA #IMPLIED >
<!ATTLIST assertTrue severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.AssertTrue -->
<!ELEMENT assertURL (permittedURIScheme*,profiles?) >
<!ATTLIST assertURL connect (true|false) #REQUIRED>
<!ATTLIST assertURL errorCode CDATA #IMPLIED >
<!ATTLIST assertURL message CDATA #IMPLIED >
<!ATTLIST assertURL severity NMTOKEN #IMPLIED >

<!ELEMENT permittedURIScheme (#PCDATA) >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.AssertValid -->
<!ELEMENT assertValid (profiles?) >
<!ATTLIST assertValid errorCode CDATA #IMPLIED >
<!ATTLIST assertValid message CDATA #IMPLIED >
<!ATTLIST assertValid requireValidElements (true|false) #REQUIRED>
<!ATTLIST assertValid severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.CheckWith -->
<!ELEMENT checkWith (simpleCheck,profiles?) >
<!ATTLIST checkWith errorCode CDATA #IMPLIED >
<!ATTLIST checkWith ignoreIfNull (true|false) #IMPLIED >
<!ATTLIST checkWith message CDATA #IMPLIED >
<!ATTLIST checkWith severity NMTOKEN #IMPLIED >

<!-- name of a class implementing net.sf.oval.constraint.check.CheckWithCheck.SimpleCheck -->
<!ELEMENT simpleCheck EMPTY>
<!ATTLIST simpleCheck class NMTOKEN #REQUIRED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.EqualToField -->
<!ELEMENT equalToField (profiles?) >
<!ATTLIST equalToField declaringClass NMTOKEN #IMPLIED>
<!ATTLIST equalToField errorCode CDATA #IMPLIED >
<!ATTLIST equalToField fieldName NMTOKEN #REQUIRED >
<!ATTLIST equalToField message CDATA #IMPLIED >
<!ATTLIST equalToField severity NMTOKEN #IMPLIED >
<!ATTLIST equalToField useGetter (true|false) #REQUIRED>

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.Future -->
<!ELEMENT future (profiles?) >
<!ATTLIST future errorCode CDATA #IMPLIED >
<!ATTLIST future message CDATA #IMPLIED >
<!ATTLIST future severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.HasSubstring -->
<!ELEMENT hasSubstring (profiles?) >
<!ATTLIST hasSubstring errorCode CDATA #IMPLIED >
<!ATTLIST hasSubstring ignoreCase (true|false) #REQUIRED >
<!ATTLIST hasSubstring message CDATA #IMPLIED >
<!ATTLIST hasSubstring substring CDATA #REQUIRED >
<!ATTLIST hasSubstring severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.InstanceOf -->
<!ELEMENT instanceOf (types,profiles?) >
<!ATTLIST instanceOf errorCode CDATA #IMPLIED >
<!ATTLIST instanceOf message CDATA #IMPLIED >
<!ATTLIST instanceOf severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.InstanceOfAny -->
<!ELEMENT instanceOfAny (types,profiles?) >
<!ATTLIST instanceOfAny errorCode CDATA #IMPLIED >
<!ATTLIST instanceOfAny message CDATA #IMPLIED >
<!ATTLIST instanceOfAny severity NMTOKEN #IMPLIED >

<!ELEMENT types (java-type+)>
<!ELEMENT java-type (#PCDATA)>

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.Length -->
<!ELEMENT length (profiles?) >
<!ATTLIST length errorCode CDATA #IMPLIED >
<!ATTLIST length max NMTOKEN #IMPLIED >
<!ATTLIST length message CDATA #IMPLIED >
<!ATTLIST length min NMTOKEN #IMPLIED >
<!ATTLIST length severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.MatchPattern -->
<!ELEMENT matchPattern (pattern*,profiles?) >
<!ATTLIST matchPattern errorCode CDATA #IMPLIED >
<!ATTLIST matchPattern matchAll (true|false) #REQUIRED >
<!ATTLIST matchPattern message CDATA #IMPLIED >
<!ATTLIST matchPattern severity NMTOKEN #IMPLIED >

<!ELEMENT pattern EMPTY >
<!ATTLIST pattern flags NMTOKEN #IMPLIED >
<!ATTLIST pattern pattern CDATA #REQUIRED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.Max -->
<!ELEMENT max (profiles?) >
<!ATTLIST max errorCode CDATA #IMPLIED >
<!ATTLIST max max NMTOKEN #REQUIRED >
<!ATTLIST max message CDATA #IMPLIED >
<!ATTLIST max severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.MaxLength -->
<!ELEMENT maxLength (profiles?) >
<!ATTLIST maxLength errorCode CDATA #IMPLIED >
<!ATTLIST maxLength max NMTOKEN #REQUIRED >
<!ATTLIST maxLength message CDATA #IMPLIED >
<!ATTLIST maxLength severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.MaxSize -->
<!ELEMENT maxSize (profiles?) >
<!ATTLIST maxSize errorCode CDATA #IMPLIED >
<!ATTLIST maxSize max NMTOKEN #REQUIRED >
<!ATTLIST maxSize message CDATA #IMPLIED >
<!ATTLIST maxSize severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.MemberOf -->
<!ELEMENT memberOf (members*,profiles?) >
<!ATTLIST memberOf errorCode CDATA #IMPLIED >
<!ATTLIST memberOf ignoreCase (true|false) #REQUIRED >
<!ATTLIST memberOf message CDATA #IMPLIED >
<!ATTLIST memberOf severity NMTOKEN #IMPLIED >

<!ELEMENT members (string*) >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.Min -->
<!ELEMENT min (profiles?) >
<!ATTLIST min errorCode CDATA #IMPLIED >
<!ATTLIST min message CDATA #IMPLIED >
<!ATTLIST min min NMTOKEN #REQUIRED >
<!ATTLIST min severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.MinLength -->
<!ELEMENT minLength (profiles?) >
<!ATTLIST minLength errorCode CDATA #IMPLIED >
<!ATTLIST minLength message CDATA #IMPLIED >
<!ATTLIST minLength min NMTOKEN #REQUIRED >
<!ATTLIST minLength severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.MinSize -->
<!ELEMENT minSize (profiles?) >
<!ATTLIST minSize errorCode CDATA #IMPLIED >
<!ATTLIST minSize message CDATA #IMPLIED >
<!ATTLIST minSize min NMTOKEN #IMPLIED >
<!ATTLIST minSize severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.NoSelfReference -->
<!ELEMENT noSelfReference (profiles?) >
<!ATTLIST noSelfReference errorCode CDATA #IMPLIED >
<!ATTLIST noSelfReference message CDATA #IMPLIED >
<!ATTLIST noSelfReference severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.NotBlank -->
<!ELEMENT notBlank (profiles?) >
<!ATTLIST notBlank errorCode CDATA #IMPLIED >
<!ATTLIST notBlank message CDATA #IMPLIED >
<!ATTLIST notBlank severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.NotEmpty -->
<!ELEMENT notEmpty (profiles?) >
<!ATTLIST notEmpty errorCode CDATA #IMPLIED >
<!ATTLIST notEmpty message CDATA #IMPLIED >
<!ATTLIST notEmpty severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.NotEqual -->
<!ELEMENT notEqual (profiles?) >
<!ATTLIST notEqual errorCode CDATA #IMPLIED >
<!ATTLIST notEqual ignoreCase (true|false) #REQUIRED >
<!ATTLIST notEqual message CDATA #IMPLIED >
<!ATTLIST notEqual severity NMTOKEN #IMPLIED >
<!ATTLIST notEqual testString CDATA #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.NotEqualToField -->
<!ELEMENT notEqualToField (profiles?) >
<!ATTLIST notEqualToField errorCode CDATA #IMPLIED >
<!ATTLIST notEqualToField fieldName NMTOKEN #REQUIRED >
<!ATTLIST notEqualToField message CDATA #IMPLIED >
<!ATTLIST notEqualToField severity NMTOKEN #IMPLIED >
<!ATTLIST notEqualToField declaringClass NMTOKEN #IMPLIED>
<!ATTLIST notEqualToField useGetter (true|false) #REQUIRED>

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.NotMemberOf -->
<!ELEMENT notMemberOf (members*,profiles?) >
<!ATTLIST notMemberOf errorCode CDATA #IMPLIED >
<!ATTLIST notMemberOf ignoreCase (true|false) #REQUIRED >
<!ATTLIST notMemberOf message CDATA #IMPLIED >
<!ATTLIST notMemberOf severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.NotNegative -->
<!ELEMENT notNegative (profiles?) >
<!ATTLIST notNegative errorCode CDATA #IMPLIED >
<!ATTLIST notNegative message CDATA #IMPLIED >
<!ATTLIST notNegative severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.NotNull -->
<!ELEMENT notNull (profiles?) >
<!ATTLIST notNull errorCode CDATA #IMPLIED >
<!ATTLIST notNull message CDATA #IMPLIED >
<!ATTLIST notNull severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.Past -->
<!ELEMENT past (profiles?) >
<!ATTLIST past errorCode CDATA #IMPLIED >
<!ATTLIST past message CDATA #IMPLIED >
<!ATTLIST past severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.Range -->
<!ELEMENT range (profiles?) >
<!ATTLIST range errorCode CDATA #IMPLIED >
<!ATTLIST range max NMTOKEN #IMPLIED >
<!ATTLIST range message CDATA #IMPLIED >
<!ATTLIST range min NMTOKEN #IMPLIED >
<!ATTLIST range severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraint.Size -->
<!ELEMENT size (profiles?) >
<!ATTLIST size errorCode CDATA #IMPLIED >
<!ATTLIST size max NMTOKEN #IMPLIED >
<!ATTLIST size message CDATA #IMPLIED >
<!ATTLIST size min NMTOKEN #IMPLIED >
<!ATTLIST size severity NMTOKEN #IMPLIED >

<!-- built-in single value constraint, corresponds to net.sf.oval.constraints.ValidateWithMethod -->
<!ELEMENT validateWithMethod (profiles?) >
<!ATTLIST validateWithMethod errorCode CDATA #IMPLIED >
<!ATTLIST validateWithMethod ignoreIfNull (true|false) #IMPLIED >
<!ATTLIST validateWithMethod message CDATA #IMPLIED >
<!ATTLIST validateWithMethod severity NMTOKEN #IMPLIED >
<!ATTLIST validateWithMethod methodName NMTOKEN #REQUIRED >
<!ATTLIST validateWithMethod parameterType CDATA #REQUIRED >

<!-- built-in exclusion, corresponds to net.sf.oval.constraint.exclusion.Nullable -->
<!ELEMENT nullable (profiles?) >
