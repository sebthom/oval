# *******************************************************************************
# Portions created by Sebastian Thomschke are copyright (c) 2005-2010 Sebastian
# Thomschke.
#
# All Rights Reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     kindloaf - initial translation
# ******************************************************************************

# {context} = the validation context (e.g. a field, a method return value or a constructor/method parameter
# {invalidValue} = the value that has been checked

net.sf.oval.constraint.Assert.violated={context}不满足如下条件：{expression}
net.sf.oval.constraint.AssertFalse.violated={context}的值不为false
net.sf.oval.constraint.AssertNull.violated={context} must be null
net.sf.oval.constraint.AssertTrue.violated={context}的值不为true
net.sf.oval.constraint.AssertURL.violated={context} is not a valid URL
net.sf.oval.constraint.CheckWith.violated={context} {simpleCheck} 不满足
net.sf.oval.constraint.DateRange.violated={context} is not in the range {min} through {max}
net.sf.oval.constraint.Email.violated={context} is not a valid e-mail address
net.sf.oval.constraint.EqualToField.violated={context} is not equal to field {fieldName}
net.sf.oval.constraint.Future.violated={context}必须在future中
net.sf.oval.constraint.HasSubstring.violated={context}必须包含子串'{substring}'
net.sf.oval.constraint.InstanceOf.violated={context}必须是一个{types}类型的实例
net.sf.oval.constraint.InstanceOfAny.violated={context}必须是一个{types}类型的实例
net.sf.oval.constraint.Length.violated={context}的长度不在{min}到{max}个字符之间
net.sf.oval.constraint.MatchPattern.violated={context}不匹配模式{pattern}
net.sf.oval.constraint.Max.violated={context}不能超过{max}
net.sf.oval.constraint.MaxLength.violated={context}不能超过{max}个字符
net.sf.oval.constraint.MaxSize.violated={context}不能包含超过{max}个元素
net.sf.oval.constraint.MemberOf.violated={context} must be one of these values: {members}
net.sf.oval.constraint.Min.violated={context}不能比{min}小
net.sf.oval.constraint.MinLength.violated={context}不能少于{min}个字符
net.sf.oval.constraint.MinSize.violated={context}不能包含少于{min}个元素
net.sf.oval.constraint.NoSelfReference.violated={context}非法的自我引用
net.sf.oval.constraint.NotBlank.violated={context}不能是空白(blank)的
net.sf.oval.constraint.NotEmpty.violated={context}不能是空(empty)的
net.sf.oval.constraint.NotEqual.violated={context} must not equal {testString}
net.sf.oval.constraint.NotEqualToField.violated={context} must not equal to field {fieldName}
net.sf.oval.constraint.NotMatchPattern.violated={context} must not match the pattern {pattern}
net.sf.oval.constraint.NotMemberOf.violated={context} must not be one of these values: {members}
net.sf.oval.constraint.NotNegative.violated={context}不能是负的
net.sf.oval.constraint.NotNull.violated={context}不能是空(null)的
net.sf.oval.constraint.Past.violated={context}必须在past中
net.sf.oval.constraint.Range.violated={context}不在从{min}到{max}的范围里
net.sf.oval.constraint.Size.violated={context}不包含介于{min}个到{max}个之间的元素
net.sf.oval.constraint.ValidateWithMethod.violated=方法{methodName}({parameterType})决定{context}是不合法的

net.sf.oval.guard.Pre.violated={context}不满足前提条件{expression}
net.sf.oval.guard.Post.violated={context}不满足结束条件{expression}

net.sf.oval.exception.AccessingFieldValueFailedException.message=访问域{fieldName}的值失败。
net.sf.oval.exception.ConstraintSetAlreadyDefinedException.message=另外一个全名相同的限制集{constraintSetId}已经被定义过了。
net.sf.oval.exception.ExpressionLanguageNotAvailableException.message=表达式语言{languageId}不可用。
net.sf.oval.exception.UndefinedConstraintSetException.message=限制集{constraintSetId}没有被定义过。
net.sf.oval.exception.InvokingMethodFailedException.message=调用方法{methodName}失败。

net.sf.oval.context.ConstructorParameterContext.parameter=参数
net.sf.oval.context.MethodParameterContext.parameter=参数

